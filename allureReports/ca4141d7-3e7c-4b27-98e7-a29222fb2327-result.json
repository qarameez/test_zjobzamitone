{"name": "test_all", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x002DA813+48355]\n\t(No symbol) [0x0026C4B1]\n\t(No symbol) [0x00175220]\n\t(No symbol) [0x0016E677]\n\t(No symbol) [0x00188C62]\n\t(No symbol) [0x001BA7B4]\n\t(No symbol) [0x001886ED]\n\t(No symbol) [0x001BA536]\n\t(No symbol) [0x001982DC]\n\t(No symbol) [0x001993DD]\n\tGetHandleVerifier [0x0053AABD+2539405]\n\tGetHandleVerifier [0x0057A78F+2800735]\n\tGetHandleVerifier [0x0057456C+2775612]\n\tGetHandleVerifier [0x003651E0+616112]\n\t(No symbol) [0x00275F8C]\n\t(No symbol) [0x00272328]\n\t(No symbol) [0x0027240B]\n\t(No symbol) [0x00264FF7]\n\tBaseThreadInitThunk [0x76427D59+25]\n\tRtlInitializeExceptionChain [0x7776B79B+107]\n\tRtlClearBits [0x7776B71F+191]\n\t(No symbol) [0x00000000]", "trace": "self = <Test.test_post_job.Test_login1 object at 0x0000013291F78700>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"adb0ae37475b2443253936b36924c302\")>\n\n    def test_all(self,setup):\n        driver = webdriver.Chrome()\n        driver.get(\"https://zjobsandbox.zamit.one/login\")\n        driver.maximize_window()\n        driver.find_element(By.NAME, \"email\").send_keys(\"zamitfutureschool@gmail.com\")\n        time.sleep(2)\n        driver.find_element(By.ID, \"submit-login\").click()\n        time.sleep(2)\n        driver.find_element(By.ID, \"password\").send_keys(\"3APQAN\")\n        time.sleep(2)\n        driver.find_element(By.ID, \"submit-login\").click()\n        time.sleep(5)\n    \n    \n        driver.find_element(By.XPATH,\"//a[contains(text(),'Post a Job')]\").click()\n        time.sleep(3)\n        title = driver.title\n        print(driver.title)\n        assert title == \"Add new Job | ZJobs\", \"Title mismatch\"\n        print(\"Test test_valid_login successfully executed\")\n    \n    \n        # Enter pot job page\n        selectTeaching = Select(driver.find_element(By.XPATH, \"//body/div[3]/div[1]/div[2]/div[1]/form[1]/div[1]/div[1]/select[1]\"))\n        selectTeaching.select_by_value(\"Others\")\n        time.sleep(2)\n        print(\"Teaching Level\")\n        time.sleep(3)\n    \n        #Teaching Level\n        driver.find_element(By.XPATH,\"//body/div[3]/div[1]/div[2]/div[1]/form[1]/div[1]/div[1]/span[1]/span[1]/span[1]/ul[1]/li[1]/input[1]\").click()\n        time.sleep(2)\n    \n        #Subjects\n        Subjects_art = driver.find_element(By.XPATH,\n                            \"//body/div[3]/div[1]/div[2]/div[1]/form[1]/div[1]/div[1]/span[1]/span[1]/span[1]/ul[1]/li[1]/input[1]\")\n        time.sleep(2)\n        Subjects_art.click()\n        Subjects_art.send_keys(\"art\")\n        Subjects_art.send_keys(Keys.ENTER)\n    \n        #Languages\n        time.sleep(2)\n        Languages = driver.find_element(By.XPATH,\n                            \"//body/div[3]/div[1]/div[2]/div[1]/form[1]/div[1]/div[1]/span[2]/span[1]/span[1]/ul[1]/li[1]/input[1]\")\n        time.sleep(2)\n        Languages.click()\n        Languages.send_keys(\"Hindi\")\n        Languages.send_keys(Keys.ENTER)\n        time.sleep(3)\n    \n        # Enter selectExperience\n        selectExperience = Select(driver.find_element(By.NAME,\"work_experience\"))\n        selectExperience.select_by_value(\"1-5 years\")\n        time.sleep(2)\n        print(\"selectExperience\")\n        time.sleep(3)\n    \n        # Enter Board\n        selectBoard = Select(driver.find_element(By.NAME, \"school_board\"))\n        time.sleep(2)\n        selectBoard.select_by_value(\"ICSE\")\n        time.sleep(2)\n        print(\"selectBoard\")\n        time.sleep(3)\n    \n        # Enter Gender\n        selectGender = Select(driver.find_element(By.NAME,\"gender\"))\n        print(\"selectGender\")\n        time.sleep(2)\n        selectGender.select_by_value(\"male\")\n        print(\"Male\")\n        time.sleep(2)\n        print(\"selectGender\")\n        time.sleep(3)\n    \n    \n    \n        # Enter AgeBracket\n        selectAgeBracket = Select(driver.find_element(By.XPATH,\"//body/div[3]/div[1]/div[2]/div[1]/form[1]/div[1]/div[1]/select[7]\"))\n        selectAgeBracket.select_by_value(\"35 to 45 years\")\n        time.sleep(2)\n        print(\"selectAgeBracket\")\n        time.sleep(3)\n    \n        #calender\n        calender=driver.find_element(By.XPATH, \"// input[ @ id = 'datepicker_new']\")\n        time.sleep(2)\n        calender.click()\n        calender.send_keys(\"31\")\n        calender.send_keys(Keys.ENTER)\n        time.sleep(3)\n    \n    \n        # School\n        driver.find_element(By.ID,\"schooladdress\").click()\n        time.sleep(2)\n        driver.find_element(By.ID, \"schooladdress\").send_keys(\"Hello I am Rameez khan\")\n        time.sleep(5)\n    \n        # Enter Board\n        selectBoard = Select(driver.find_element(By.XPATH, \"//select[@id='state']\"))\n        selectBoard.select_by_value(\"11\")\n        time.sleep(5)\n        print(\"selectState\")\n        time.sleep(3)\n    \n        # Enter City\n        selectcity = Select(driver.find_element(By.NAME, \"city\"))\n        selectcity.select_by_value(\"2635\")\n        time.sleep(2)\n        print(\"selectcity\")\n        time.sleep(3)\n    \n    \n        driver.find_element(By.XPATH, \"//button[contains(text(),'Post')]\").click()\n        time.sleep(3)\n        print(\"Update\")\n    \n        # driver.find_element(By.ID, \"upldLogoPopup\").click()\n        # print(\"upldLogoPopup\")\n        # time.sleep(3)\n    \n        alert = driver.switch_to.alert\n        print(alert.text)\n        alert.accept()\n>       alert.dismiss()\n\nTest\\test_post_job.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\alert.py:63: in dismiss\n    self.driver.execute(Command.W3C_DISMISS_ALERT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000132920A79A0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such alert\",\"message\":\"no such alert\\\\n  (Session info: chrome=115.0.5...\\tRtlInitializeExceptionChain [0x7776B79B+107]\\\\n\\\\tRtlClearBits [0x7776B71F+191]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoAlertPresentException: Message: no such alert\nE         (Session info: chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x002DA813+48355]\nE       \t(No symbol) [0x0026C4B1]\nE       \t(No symbol) [0x00175220]\nE       \t(No symbol) [0x0016E677]\nE       \t(No symbol) [0x00188C62]\nE       \t(No symbol) [0x001BA7B4]\nE       \t(No symbol) [0x001886ED]\nE       \t(No symbol) [0x001BA536]\nE       \t(No symbol) [0x001982DC]\nE       \t(No symbol) [0x001993DD]\nE       \tGetHandleVerifier [0x0053AABD+2539405]\nE       \tGetHandleVerifier [0x0057A78F+2800735]\nE       \tGetHandleVerifier [0x0057456C+2775612]\nE       \tGetHandleVerifier [0x003651E0+616112]\nE       \t(No symbol) [0x00275F8C]\nE       \t(No symbol) [0x00272328]\nE       \t(No symbol) [0x0027240B]\nE       \t(No symbol) [0x00264FF7]\nE       \tBaseThreadInitThunk [0x76427D59+25]\nE       \tRtlInitializeExceptionChain [0x7776B79B+107]\nE       \tRtlClearBits [0x7776B71F+191]\nE       \t(No symbol) [0x00000000]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoAlertPresentException"}, "start": 1691390874187, "stop": 1691390973082, "uuid": "86c945b8-a874-45e4-ace0-601b6f17d7d4", "historyId": "26406a3b79cebaa166e3b305ac9173e3", "testCaseId": "26406a3b79cebaa166e3b305ac9173e3", "fullName": "Test.test_post_job.Test_login1#test_all", "labels": [{"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_post_job"}, {"name": "subSuite", "value": "Test_login1"}, {"name": "host", "value": "M061"}, {"name": "thread", "value": "32640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_post_job"}]}